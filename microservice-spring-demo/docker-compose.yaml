version: '3.4'

services:
  spring-order:
    image: spring-microservices/order
    container_name: spring-order
    environment:
      - DB_URL=jdbc:postgresql://:5432/dbinvoicing
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
    ports:
      - "18081:8080"
    links:
      - zipkin
    build:
      context: ./microservice-spring-order
      dockerfile: Dockerfile
  spring-shipping:
    image: spring-microservices/shipping
    container_name: spring-shipping
    environment:
      - DB_URL=jdbc:postgresql://:5432/dbinvoicing
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - ORDER_URL=spring-order
    ports:
      - "18083:8080"
    links:
      - spring-order
      - zipkin
    build:
      context: ./microservice-spring-shipping
      dockerfile: Dockerfile
  spring-invoicing:
    image: spring-microservices/invoicing
    container_name: spring-invoicing
    environment:
      - DB_URL=jdbc:postgresql://:5432/dbinvoicing
      - DB_USERNAME=postgres
      - DB_PASSWORD=password
      - ORDER_URL=spring-order
    ports:
      - "18082:8080"
    links:
      - spring-order
      - zipkin
    build:
      context: ./microservice-spring-invoicing
      dockerfile: Dockerfile
  prometheus:
    image: spring-microservices/prometheus
    container_name: spring-prometheus
    ports:
      - "9090:9090"
    links:
      - spring-order
      - spring-invoicing
      - spring-shipping
    build:
      context: ./prometheus
      dockerfile: Dockerfile
  grafana:
    image: 'grafana/grafana:10.2.0'
    links:
      - prometheus
    ports:
      - '3000:3000'
  zipkin:
    image: openzipkin/zipkin:2.24
    ports:
      - 9412:9411
